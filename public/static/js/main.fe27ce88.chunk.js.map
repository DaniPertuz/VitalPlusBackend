{"version":3,"sources":["types/types.js","redux/reducers/AuthReducer.js","redux/reducers/ModalReducer.js","redux/reducers/PatientsReducer.js","redux/reducers/PaymentsReducer.js","redux/reducers/ProceduresReducer.js","redux/reducers/ProfessionalsReducer.js","redux/reducers/ReportsReducer.js","redux/reducers/UsersReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","helpers/fetch.js","redux/actions/auth.js","assets/VitalPlus.png","components/hooks/useForm.js","components/login/LoginScreen.js","redux/actions/patients.js","redux/actions/procedures.js","redux/actions/professionals.js","redux/actions/users.js","redux/actions/modal.js","components/patients/PatientsModal.js","components/patients/PatientsItem.js","components/patients/PatientsList.js","components/patients/PatientsRegister.js","components/patients/PatientsScreen.js","redux/actions/payments.js","components/payments/PaymentsItem.js","components/payments/PaymentsList.js","components/payments/PaymentsRegister.js","components/payments/PaymentsScreen.js","components/procedures/ProcedureRegister.js","components/procedures/ProceduresModal.js","components/procedures/ProcedureItem.js","components/procedures/ProceduresList.js","components/procedures/ProceduresScreen.js","components/professionals/ProfessionalsModal.js","components/professionals/ProfessionalsItem.js","components/professionals/ProfessionalsList.js","components/professionals/ProfessionalsRegister.js","components/professionals/ProfessionalsScreen.js","redux/actions/reports.js","components/search/ReportsPatientList.js","components/search/ReportsProcedureList.js","components/search/ReportsProfessionalList.js","components/search/ReportsScreen.js","components/users/UsersModal.js","components/users/UsersItem.js","components/users/UsersList.js","components/users/UsersRegister.js","components/users/UsersScreen.js","routes/MainRouter.js","assets/VitalPlus400x160.png","components/main/MainSidebar.js","components/main/MainScreen.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","VitalPlusApp.js","index.js"],"names":["types","initialState","checking","modalDialog","rootReducer","combineReducers","auth","state","type","payload","user","modal","professionals","data","professional","map","e","_id","filter","procedures","procedure","patients","patient","payments","reports","total","users","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchWithoutToken","endpoint","method","URL","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","login","checkingFinish","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","username","password","formLoginValues","id","className","onSubmit","preventDefault","a","resp","json","ok","setItem","Date","getTime","msg","Swal","fire","errors","error","join","startLogin","src","logo","alt","placeholder","onChange","patientAddNew","loadingPatients","getPatient","document","loadingPatient","console","log","patientUpdate","patientDeleting","procedureAddNew","getProcedure","loadingProcedure","loadingProcedures","procedureUpdate","procedureDeleting","professionalAddNew","loadingProfessionals","getProfessional","loadingProfessional","professionalUpdate","professionalDeleting","userAddNew","loadingUsers","getUser","email","loadingUser","userUpdate","userDeleting","uiOpenModal","uiCloseModal","initPatient","phone","address","dateOfBirth","transferred","PatientsModal","proceduresDB","useSelector","professionalsDB","formValues","setFormValues","handleDate","moment","utc","format","useEffect","closeModal","open","onClose","center","status","then","updatePatient","htmlFor","autoComplete","index","locale","PatientsItem","onClick","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","deletePatient","PatientsList","PatientsRegister","addPatient","defaultValue","PatientsScreen","setPatients","registerForm","setRegisterForm","paymentAddNew","payment","PaymentsItem","date","balance","handleMethod","PaymentsList","PaymentsRegister","event","checked","PaymentsScreen","setPayments","newPayment","setNewPayment","getPaymentsByPatient","ProcedureRegister","description","rows","initProcedure","ProceduresModal","updateProcedure","ProcedureItem","deleteProcedure","ProceduresList","ProceduresScreen","setProcedures","initProfessional","specialty","ProfessionalsModal","updateProfessional","ProfessionalsItem","deleteProfessional","ProfessionalsList","ProfessionalsRegister","ProfessionalsScreen","setProfessionals","ReportsPatientList","table","filename","sheet","buttonText","ReportsProcedureList","ReportsProfessionalList","ReportsScreen","collection","range","reportsDB","totalDB","proceduresReports","setProceduresReports","professionalsReports","setProfessionalsReports","setTotal","reportsByProcedure","reportsByProfessional","reportsByPatient","initUser","role","UsersModal","display","setDisplay","passwordDisplay","setPasswordDisplay","updateUser","pwd","generator","generate","length","numbers","uppercase","UsersItem","deleteUser","UsersList","UsersRegister","setPassword","setUser","userDB","addUser","defaultChecked","UsersScreen","setUsers","MainRouter","exact","path","component","MainSidebar","data-bs-target","data-bs-toggle","aria-expanded","to","activeClassName","clear","MainScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","VitalPlusApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fe27ce88.chunk.js","sourcesContent":["\nexport const types = {\n\n    authCheckingFinish: '[Auth] Finish checking login state',\n    authStartLogin: '[Auth] Start login',\n    authLogin: '[Auth] Login',\n    authStartTokenRenewal: '[Auth] Start token renewal',\n    authLogout: '[Auth] Logout',\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    paymentsPatient: '[Payment] Read Payments By Patient',\n    paymentAddNew: '[Payment] Add Payment',\n    \n    patientsRead: '[Patient] Read Patients',\n    proceduresRead: '[Procedure] Read Procedures',\n    professionalsRead: '[Professional] Read Professionals',\n    usersRead: '[User] Read Users',\n    \n    patientRead: '[Patient] Read Patient',\n    professionalRead: '[Patient] Read Professional',\n    procedureRead: '[Patient] Read Procedure',\n    userRead: '[User] Read User',\n\n    patientsAddNew: '[Patient] Add Patient',\n    proceduresAddNew: '[Procedure] Add Procedure',\n    professionalsAddNew: '[Professional] Add Professional',\n    usersAddNew: '[User] Add User',\n\n    patientsUpdate: '[Patient] Update Patient',\n    professionalUpdate: '[Professional] Update Professional',\n    procedureUpdate: '[Procedure] Update Procedure',\n    userUpdate: '[User] Update User',\n\n    patientsDelete: '[Patient] Delete Patient',\n    proceduresDelete: '[Procedure] Delete Procedure',\n    professionalsDelete: '[Professional] Delete Professional',\n    usersDelete: '[User] Delete User',\n\n    reportsPatient: '[Report] Read Payments By Patient',\n    reportsProcedure: '[Report] Read Payments By Procedure',\n    reportsProfessional: '[Report] Read Payments By Professional',\n}","import { types } from '../../types/types';\n\nconst initialState = {\n    checking: true\n}\n\nexport const AuthReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                user: {...payload},\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = {\n    modalDialog: false\n}\n\nexport const ModalReducer = (state = initialState, { type }) => {\n    switch (type) {\n\n    case types.uiOpenModal:\n        return {\n            ...state,\n            modalDialog: true\n        }\n\n    case types.uiCloseModal:\n        return {\n            ...state,\n            modalDialog: false\n        }\n\n    default:\n        return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = [];\n\nexport const PatientsReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.patientsRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n        case types.patientRead:\n            return {\n                ...state,\n                patient: payload\n            }\n        case types.patientsAddNew:\n            return {\n                ...state,\n                data: [...state.data, payload]\n            }\n        case types.patientsUpdate:\n            return {\n                ...state,\n                data: state.data.map(\n                    e => (e._id === payload._id) ? payload : e\n                )\n            }\n        case types.patientsDelete:\n            return {\n                ...state,\n                data: state.data.filter(\n                    e => (e._id !== state.patient._id)\n                ),\n                patient: null\n            }\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = [];\n\nexport const PaymentsReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.paymentsPatient:\n            return {\n                ...state,\n                data: [...payload]\n            }\n        case types.paymentAddNew:\n            return {\n                ...state,\n                data: [payload, ...state.data]\n            }\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = [];\n\nexport const ProcedureReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.proceduresRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n        case types.proceduresAddNew:\n            return {\n                ...state,\n                data: [...state.data, payload]\n            }\n        case types.procedureRead:\n            return {\n                ...state,\n                procedure: payload\n            }\n        case types.procedureUpdate:\n            return {\n                ...state,\n                data: state.data.map(\n                    e => (e._id === payload._id) ? payload : e\n                )\n            }\n        case types.proceduresDelete:\n            return {\n                ...state,\n                data: state.data.filter(\n                    e => (e._id !== state.procedure._id)\n                ),\n                procedure: null\n            }\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = [];\n\nexport const ProfessionalsReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.professionalsRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n        case types.professionalRead:\n            return {\n                ...state,\n                professional: payload\n            }\n        case types.professionalsAddNew:\n            return {\n                ...state,\n                data: [...state.data, payload]\n            }\n        case types.professionalUpdate:\n            return {\n                ...state,\n                data: state.data.map(\n                    e => (e._id === payload._id) ? payload : e\n                )\n            }\n        case types.professionalsDelete:\n            return {\n                ...state,\n                data: state.data.filter(\n                    e => (e._id !== state.professional._id)\n                ),\n                professional: null\n            }\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = [];\n\nexport const ReportsReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case types.reportsPatient:\n    case types.reportsProcedure:\n    case types.reportsProfessional:\n        return {\n            ...state,\n            data: payload.reports,\n            total: payload.total\n        }\n    default:\n        return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = [];\n\nexport const UsersReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.usersRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n        case types.userRead:\n            return {\n                ...state,\n                user: payload\n            }\n        case types.usersAddNew:\n            return {\n                ...state,\n                data: [...state.data, payload],\n                user: payload\n            }\n        case types.userUpdate:\n            return {\n                ...state,\n                data: state.data.map(\n                    e => (e._id === payload._id) ? payload : e\n                )\n            }\n        case types.usersDelete:\n            return {\n                ...state,\n                data: state.data.filter(\n                    e => (e._id !== state.user._id)\n                ),\n                user: null\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport { AuthReducer } from './AuthReducer';\nimport { ModalReducer } from './ModalReducer';\nimport { PatientsReducer } from './PatientsReducer';\nimport { PaymentsReducer } from './PaymentsReducer';\nimport { ProcedureReducer } from './ProceduresReducer';\nimport { ProfessionalsReducer } from './ProfessionalsReducer';\nimport { ReportsReducer } from './ReportsReducer';\nimport { UsersReducer } from './UsersReducer';\n\nexport const rootReducer = combineReducers({\n    auth: AuthReducer,\n    modal: ModalReducer,\n    professionals: ProfessionalsReducer,\n    procedures: ProcedureReducer,\n    patients: PatientsReducer,\n    payments: PaymentsReducer,\n    reports: ReportsReducer,\n    users: UsersReducer\n});","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","const baseURL = process.env.REACT_APP_API_URL;\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n    const URL = `${baseURL}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(URL);\n    } else {\n        return fetch(URL, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n    const URL = `${baseURL}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n        return fetch(URL, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch(URL, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nexport {\n    fetchWithToken,\n    fetchWithoutToken\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../../types/types';\nimport { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\n\nexport const startLogin = (username, password) => {\n    return async (dispatch) => {\n        const resp = await fetchWithoutToken('auth/login', { username, password }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login(body));\n        } else if (body.msg) {\n            Swal.fire('Error', body.msg, 'error');\n        } else {\n            Swal.fire('Error', body.errors.map((error) => error.msg).join(', '), 'error');\n        }\n    }\n}\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n\n        const isCurrentToken = !!(localStorage.getItem('token') || '');\n\n        if (!isCurrentToken) {\n            dispatch(checkingFinish());\n            return;\n        }\n\n        const resp = await fetchWithToken('auth/renew');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                username: body.username,\n                name: body.name,\n                role: body.role\n            }));\n        } else {\n            dispatch(checkingFinish());\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(logout());\n    }\n}\n\nconst logout = () => ({ type: types.authLogout });","export default __webpack_public_path__ + \"static/media/VitalPlus.dd5321fd.png\";","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react';\n\nimport '../../styles/styles.css';\n\nimport logo from '../../assets/VitalPlus.png';\nimport { useForm } from '../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startLogin } from '../../redux/actions/auth';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleInputChange] = useForm({\n        username: '',\n        password: ''\n    });\n\n    const { username, password } = formLoginValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch(startLogin(username, password));\n    }\n\n    return (\n        <div id=\"login\" className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"container text-center col-xs-12 col-sm-12 col-md-9 col-lg-4 mt-5\">\n                    <form\n                        className=\"container bg-light rounded animate__animated animate__zoomIn\"\n                        onSubmit={handleLogin}\n                    >\n                <div className=\"col-xs-3 col-sm-3 col-md-12 col-lg-12 text-center\">\n                    <img\n                        className=\"rounded w-75 animate__animated animate__zoomIn\"\n                        src={logo}\n                        alt=\"Logo\" />\n                </div>\n                        <h3\n                            className=\"text-center mt-2\">\n                            Inicio de sesión\n                            </h3>\n                        <div className=\"form-group\">\n                            <input\n                                id=\"inputUsername\"\n                                type=\"text\"\n                                className=\"form-control mt-4\"\n                                placeholder=\"Nombre de usuario\"\n                                name=\"username\"\n                                value={username}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                id=\"inputPassword\"\n                                type=\"password\"\n                                className=\"form-control mt-4\"\n                                placeholder=\"Contraseña\"\n                                name=\"password\"\n                                value={password}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group text-center\">\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary bg-gradient rounded-pill my-5 px-5\">\n                                Ingresar\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\nimport Swal from 'sweetalert2';\n\nexport const addPatient = (patient) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('patients', patient, 'POST');\n            if (resp.status === 200) {\n                const body = await resp.json();\n                dispatch(patientAddNew(body));\n                Swal.fire('Listo', 'Paciente registrado', 'success');\n            } else {\n                resp.json()\n                    .then(data => {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                    })\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst patientAddNew = (patient) => ({\n    type: types.patientsAddNew,\n    payload: patient\n});\n\nexport const getPatients = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('patients');\n            const body = await resp.json();\n\n            const patients = body.patients;\n            dispatch(loadingPatients(patients));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingPatients = (patients) => ({\n    type: types.patientsRead,\n    payload: patients\n});\n\nexport const getPatient = (document) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`patients/${document}`);\n            const body = await resp.json();\n            dispatch(loadingPatient(body));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingPatient = (patient) => ({\n    type: types.patientRead,\n    payload: patient\n});\n\nexport const updatePatient = (patient) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`patients/${patient._id}`, patient, 'PUT');\n            const body = await resp.json();\n            if (resp.status === 200) {\n                dispatch(patientUpdate(body));\n                Swal.fire('Listo', 'Paciente actualizado', 'success');\n            } else {\n                resp.json()\n                    .then(data => {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                    });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst patientUpdate = (patient) => ({\n    type: types.patientsUpdate,\n    payload: patient\n});\n\nexport const deletePatient = (_id, name) => {\n    return async (dispatch) => {\n        try {\n            Swal.fire({\n                title: '¿Está seguro?',\n                text: `Eliminar paciente ${name}`,\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Sí',\n                cancelButtonText: 'No'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    const resp = fetchWithToken(`patients/${_id}`, {}, 'DELETE');\n                    resp.then(() => {\n                        dispatch(patientDeleting());\n                        Swal.fire('Eliminado', `Paciente ${name} eliminado.`, 'info');\n                    });\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst patientDeleting = () => ({ type: types.patientsDelete });","import { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\nimport Swal from 'sweetalert2';\n\nexport const addProcedure = (procedure) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('procedures', procedure, 'POST');\n            if (resp.status === 200) {\n                const body = await resp.json();\n                dispatch(procedureAddNew(body));\n                if (body.type === \"EXTRA\") {\n                    Swal.fire('Listo', 'Gasto extra registrado', 'success');\n                } else {\n                    Swal.fire('Listo', 'Tratamiento registrado', 'success');\n                }\n            } else {\n                resp.json()\n                .then(data => {\n                    Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                })\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst procedureAddNew = (procedure) => ({\n    type: types.proceduresAddNew,\n    payload: procedure\n});\n\nexport const getProcedures = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('procedures');\n            const body = await resp.json();\n\n            const procedures = body.procedures;\n            dispatch(loadingProcedures(procedures));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const getProcedure = (id) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`procedures/${id}`);\n            const body = await resp.json();\n            dispatch(loadingProcedure(body));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingProcedure = (procedure) => ({\n    type: types.procedureRead,\n    payload: procedure\n});\n\nconst loadingProcedures = (procedures) => ({\n    type: types.proceduresRead,\n    payload: procedures\n});\n\nexport const updateProcedure = (procedure) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`procedures/${procedure._id}`, procedure, 'PUT');\n\n            if (resp.status === 200) {\n                dispatch(procedureUpdate(procedure));\n                if (procedure.type === \"EXTRA\") {\n                    Swal.fire('Listo', 'Gasto extra actualizado', 'success');\n                } else {\n                    Swal.fire('Listo', 'Tratamiento actualizado', 'success');\n                }\n            } else {\n                resp.json()\n                    .then(data => {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                        console.log(data.errors);\n                    });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst procedureUpdate = (procedure) => ({\n    type: types.procedureUpdate,\n    payload: procedure\n});\n\nexport const deleteProcedure = (_id, name) => {\n    return async (dispatch) => {\n        try {\n            Swal.fire({\n                title: '¿Está seguro?',\n                text: `Eliminar concepto ${name}`,\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Sí',\n                cancelButtonText: 'No'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    const resp = fetchWithToken(`procedures/${_id}`, {}, 'DELETE');\n                    resp.then(() => {\n                        dispatch(procedureDeleting());\n                        Swal.fire('Listo', `Concepto ${name} eliminado`, 'info');\n                    });\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst procedureDeleting = () => ({ type: types.proceduresDelete });","import { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\nimport Swal from 'sweetalert2';\n\nexport const addProfessional = (professional) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('professionals', professional, 'POST');\n            if (resp.status === 200) {\n                const body = await resp.json();\n                dispatch(professionalAddNew(body));\n                Swal.fire('Resgitro exitoso', 'Profesional registrado', 'success')\n            } else {\n                resp.json()\n                    .then(data => {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                    });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst professionalAddNew = (professional) => ({\n    type: types.professionalsAddNew,\n    payload: professional\n});\n\nexport const getProfessionals = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('professionals');\n            const body = await resp.json();\n\n            const professionals = body.professionals;\n            dispatch(loadingProfessionals(professionals));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingProfessionals = (professionals) => ({\n    type: types.professionalsRead,\n    payload: professionals\n});\n\nexport const getProfessional = (id) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`professionals/${id}`);\n            const body = await resp.json();\n            dispatch(loadingProfessional(body));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingProfessional = (professional) => ({\n    type: types.professionalRead,\n    payload: professional\n});\n\nexport const updateProfessional = (professional) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`professionals/${professional._id}`, professional, 'PUT');\n\n            if (resp.status === 200) {\n                dispatch(professionalUpdate(professional));\n                Swal.fire('Listo', 'Profesional actualizado', 'success');\n            } else {\n                resp.json()\n                    .then(data => {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                    });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst professionalUpdate = (professional) => ({\n    type: types.professionalUpdate,\n    payload: professional\n});\n\nexport const deleteProfessional = (_id, name) => {\n    return async (dispatch) => {\n        try {\n            Swal.fire({\n                title: '¿Está seguro?',\n                text: `Eliminar profesional ${name}`,\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Sí',\n                cancelButtonText: 'No'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    const resp = fetchWithToken(`professionals/${_id}`, {}, 'DELETE');\n                    resp.then(() => {\n                        dispatch(professionalDeleting());\n                        Swal.fire(\n                            'Eliminado',\n                            `Profesional ${name} eliminado.`,\n                            'info'\n                        )\n                    });\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst professionalDeleting = () => ({ type: types.professionalsDelete });","import { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\nimport Swal from 'sweetalert2';\n\nexport const addUser = (user) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('users', user, 'POST');\n            if (resp.status === 200) {\n                const body = await resp.json();\n                dispatch(userAddNew(body));\n                Swal.fire('Listo', 'Usuario registrado', 'success');\n            } else {\n                resp.json()\n                    .then(data => {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                    })\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst userAddNew = (user) => ({\n    type: types.usersAddNew,\n    payload: user\n});\n\nexport const getUsers = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('users');\n            const body = await resp.json();\n\n            const users = body.users;\n            dispatch(loadingUsers(users));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingUsers = (users) => ({\n    type: types.usersRead,\n    payload: users\n});\n\n\nexport const getUser = (email) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`users/${email}`);\n            const body = await resp.json();\n            dispatch(loadingUser(body));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingUser = (user) => ({\n    type: types.userRead,\n    payload: user\n});\n\nexport const updateUser = (user) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`users/${user._id}`, user, 'PUT');\n\n            if (resp.status === 200) {\n                dispatch(userUpdate(user));\n                Swal.fire('Listo', 'Usuario actualizado', 'success');\n            } else {\n                resp.json()\n                    .then(data => {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                    });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst userUpdate = (user) => ({\n    type: types.userUpdate,\n    payload: user\n});\n\nexport const deleteUser = (_id, name) => {\n    return async (dispatch) => {\n        try {\n            Swal.fire({\n                title: '¿Está seguro?',\n                text: `Eliminar usuario ${name}`,\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Sí',\n                cancelButtonText: 'No'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    const resp = fetchWithToken(`users/${_id}`, {}, 'DELETE');\n                    resp.then(() => {\n                        dispatch(userDeleting());\n                        Swal.fire('Eliminado', `Usuario ${name} eliminado.`, 'info');\n                    });\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst userDeleting = () => ({ type: types.usersDelete });","import { types } from '../../types/types';\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'react-responsive-modal';\nimport 'react-responsive-modal/styles.css';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport Swal from 'sweetalert2';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updatePatient } from '../../redux/actions/patients';\nimport { uiCloseModal } from '../../redux/actions/modal';\n\nconst initPatient = {\n    name: '',\n    document: '',\n    phone: '',\n    address: '',\n    dateOfBirth: '',\n    procedure: '',\n    professional: '',\n    transferred: false\n}\n\nexport const PatientsModal = () => {\n\n    const dispatch = useDispatch();\n\n    const { data: proceduresDB } = useSelector(state => state.procedures);\n    const { data: professionalsDB } = useSelector(state => state.professionals);\n    const { modalDialog } = useSelector(state => state.modal);\n    const { patient } = useSelector(state => state.patients);\n\n    const [procedures,] = useState(proceduresDB)\n    const [professionals,] = useState(professionalsDB);\n    const [formValues, setFormValues] = useState(initPatient);\n\n    const handleDate = () => {\n        return moment.utc(dateOfBirth).format('YYYY-MM-DD');\n    }\n\n    useEffect(() => {\n        if (patient) {\n            setFormValues(patient);\n        }\n    }, [patient]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    const { name, document, phone, address, dateOfBirth, procedure, professional, transferred } = formValues;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (patient) {\n            if (JSON.stringify(patient) !== JSON.stringify(formValues)) {\n                dispatch(updatePatient({\n                    ...formValues,\n                    dateOfBirth: handleDate()\n                }));\n            } else {\n                Swal.fire('Atención', 'Datos no fueron modificados', 'info');\n            }\n        }\n        closeModal();\n    }\n\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n    }\n\n    return (\n        <Modal\n            open={modalDialog}\n            onClose={closeModal}\n            center\n        >\n            <h2 className=\"mt-4\">Actualización de datos</h2>\n            <form\n                className=\"container\"\n                onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"inputDocument\"\n                        className=\"form-label\"\n                    >\n                        No. de documento\n                    </label>\n                    <input\n                        id=\"inputDocument\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        autoComplete=\"off\"\n                        placeholder=\"Documento\"\n                        onChange={handleInputChange}\n                        name=\"document\"\n                        value={document}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"inputName\"\n                        className=\"form-label\"\n                    >\n                        Nombre\n                    </label>\n                    <input\n                        id=\"inputName\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        autoComplete=\"off\"\n                        placeholder=\"Nombre\"\n                        onChange={handleInputChange}\n                        name=\"name\"\n                        value={name}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"inputAddress\"\n                        className=\"form-label\"\n                    >\n                        Dirección\n                    </label>\n                    <input\n                        id=\"inputAddress\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        autoComplete=\"off\"\n                        placeholder=\"Dirección\"\n                        onChange={handleInputChange}\n                        name=\"address\"\n                        value={address}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"inputPhone\"\n                        className=\"form-label\"\n                    >\n                        Teléfono\n                    </label>\n                    <input\n                        id=\"inputPhone\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        autoComplete=\"off\"\n                        placeholder=\"Teléfono\"\n                        onChange={handleInputChange}\n                        name=\"phone\"\n                        value={phone}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"comboProfessional\"\n                        className=\"form-label\"\n                    >\n                        Profesional\n                    </label>\n                    <select\n                        id=\"comboProfessional\"\n                        className=\"form-control\"\n                        onChange={handleInputChange}\n                        name=\"professional\"\n                        value={professional}\n                    >\n                        {\n                            professionals.map((professional, index) =>\n                                <option key={index} value={professional._id}>{professional.name}</option>\n                            )\n                        }\n                    </select>\n                </div>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"comboProcedure\"\n                        className=\"form-label\"\n                    >\n                        Tratamiento\n                    </label>\n                    <select\n                        id=\"comboProcedure\"\n                        className=\"form-control\"\n                        onChange={handleInputChange}\n                        name=\"procedure\"\n                        value={procedure}\n                    >\n                        {\n                            procedures.map((procedure, index) =>\n                                <option key={index} value={procedure._id}>{procedure.name}</option>\n                            )\n                        }\n                    </select>\n                </div>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"inputDateOfBirth\"\n                        className=\"form-label\"\n                    >\n                        Fecha de nacimiento\n                    </label>\n                    <input\n                        id=\"inputDateOfBirth\"\n                        type=\"date\"\n                        className=\"form-control\"\n                        placeholder=\"Fecha de nacimiento\"\n                        onChange={handleInputChange}\n                        value={handleDate()}\n                        name=\"dateOfBirth\"\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label\n                        htmlFor=\"comboTransferred\"\n                        className=\"form-label\"\n                    >\n                        Remitido\n                    </label>\n                    <select\n                        id=\"comboTransferred\"\n                        className=\"form-select\"\n                        onChange={handleInputChange}\n                        name=\"transferred\"\n                        value={transferred}\n                    >\n                        <option value={true}>Sí</option>\n                        <option value={false}>No</option>\n                    </select>\n                </div>\n                <div className=\"mb-1\">\n                    <button\n                        className=\"btn btn-primary\"\n                    >\n                        Guardar\n                    </button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport { useDispatch } from 'react-redux';\nimport { deletePatient, getPatient } from '../../redux/actions/patients';\nimport { PatientsModal } from './PatientsModal';\nimport { uiOpenModal } from '../../redux/actions/modal';\n\nmoment.locale('es');\nexport const PatientsItem = ({\n    _id,\n    name,\n    document,\n    phone,\n    address,\n    dateOfBirth,\n    procedure,\n    professional,\n    transferred\n}) => {\n\n    const dispatch = useDispatch();\n\n    const handleDate = () => {\n        return moment.utc(dateOfBirth).format('MMMM D, YYYY');\n    }\n\n    const handleTransferred = () => {\n        return (transferred) ? 'Remitido' : 'No remitido';\n    }\n\n    const handleUpdate = () => {\n        dispatch(uiOpenModal());\n        dispatch(getPatient(document));\n    }\n\n    const handleDelete = () => {\n        dispatch(getPatient(document));\n        dispatch(deletePatient(_id, name));\n    }\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-header\">{name}</div>\n            <div className=\"card-body\">\n                <p className=\"card-text text-capitalize px-2\">\n                    Documento: {document}\n                    <br />\n                    Nacimiento: {handleDate()}\n                    <br />\n                    Dirección: {address}\n                    <br />\n                    Teléfono: {phone}\n                    <br />\n                    Tratamiento: {procedure.name}\n                    <br />\n                    Profesional: {professional.name}\n                    <br />\n                    {handleTransferred()}\n                </p>\n            </div>\n            <div className=\"card-footer text-end\">\n                <button\n                    className=\"m-1 btn btn-warning\"\n                    onClick={handleUpdate}\n                >\n                    Actualizar\n                </button>\n                <button\n                    className=\"m-1 btn btn-danger\"\n                    onClick={handleDelete}\n                >\n                    Eliminar\n                </button>\n            </div>\n            <PatientsModal key={_id} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { PatientsItem } from './PatientsItem';\n\nexport const PatientsList = ({ patients = [] }) => {\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            <div className=\"row mt-5 justify-content-center\">\n                <div className=\"col-md-6\">\n                    {\n                        patients.map((patient) =>\n                            <PatientsItem\n                                key={patient._id}\n                                {...patient}\n                            />)\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addPatient } from '../../redux/actions/patients';\nimport { useForm } from '../hooks/useForm';\n\nexport const PatientsRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const [values, handleInputChange, reset] = useForm({\n        name: '',\n        document: '',\n        phone: '',\n        address: '',\n        dateOfBirth: '',\n        procedure: '',\n        professional: '',\n        transferred: false\n    });\n\n    const { data: proceduresDB } = useSelector(state => state.procedures);\n    const { data: professionalsDB } = useSelector(state => state.professionals);\n    const { patient } = useSelector(state => state.patients);\n\n    const [procedures,] = useState(proceduresDB)\n    const [professionals,] = useState(professionalsDB);\n\n    const { name, document, phone, address, dateOfBirth, procedure, professional, transferred } = values;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(addPatient(values));\n        if (JSON.stringify(patient) === JSON.stringify(values)) {\n            reset();\n        }\n    }\n\n    return (\n        <>\n            <p className=\"fs-3 text-center mt-3\">Agregar nuevo paciente</p>\n            <form className=\"row g-3\" onSubmit={handleSubmit}>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputDocument\"\n                        className=\"form-label\">\n                        No. de documento\n                    </label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        id=\"inputDocument\"\n                        autoComplete=\"off\"\n                        name=\"document\"\n                        value={document}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputName\"\n                        className=\"form-label\">\n                        Nombre\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputName\"\n                        autoComplete=\"off\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputAddress\"\n                        className=\"form-label\">\n                        Dirección\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputAddress\"\n                        autoComplete=\"off\"\n                        name=\"address\"\n                        value={address}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputPhone\"\n                        className=\"form-label\">\n                        Teléfono\n                    </label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        id=\"inputPhone\"\n                        autoComplete=\"off\"\n                        name=\"phone\"\n                        value={phone}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"comboProfessional\"\n                        className=\"form-label\">\n                        Profesional\n                    </label>\n                    <select\n                        id=\"comboProfessional\"\n                        className=\"form-select\"\n                        name=\"professional\"\n                        value={professional}\n                        onChange={handleInputChange}\n                    >\n                        <option defaultValue>Seleccione...</option>\n                        {\n                            professionals.map((professional, index) =>\n                                <option key={index} value={professional._id}>{professional.name}</option>\n                            )\n                        }\n                    </select>\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"comboProcedure\"\n                        className=\"form-label\"\n                    >\n                        Tratamiento\n                    </label>\n                    <select\n                        id=\"comboProcedure\"\n                        className=\"form-select\"\n                        name=\"procedure\"\n                        value={procedure}\n                        onChange={handleInputChange}\n                    >\n                        <option defaultValue>Seleccione...</option>\n                        {\n                            procedures.map((procedure, index) =>\n                                <option key={index} value={procedure._id}>{procedure.name}</option>\n                            )\n                        }\n                    </select>\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputDateOfBirth\"\n                        className=\"form-check-label col-md-12\"\n                    >\n                        Fecha de nacimiento\n                    </label>\n                    <input\n                        id=\"inputDateOfBirth\"\n                        type=\"date\"\n                        className=\"form-control mt-2\"\n                        name=\"dateOfBirth\"\n                        value={dateOfBirth}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"col-md-2\">\n                    <label\n                        htmlFor=\"comboTransferred\"\n                        className=\"form-check-label mt-2\"\n                    >\n                        Remitido\n                    </label>\n                    <select\n                        id=\"comboTransferred\"\n                        className=\"form-select\"\n                        name=\"transferred\"\n                        value={transferred}\n                        onChange={handleInputChange}\n                    >\n                        <option value={true}>Sí</option>\n                        <option value={false}>No</option>\n                    </select>\n                </div>\n                <div className=\"col-md-7 mt-4\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-success m-1\"\n                    >\n                        Registrar\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { PatientsList } from './PatientsList';\nimport { PatientsRegister } from './PatientsRegister';\n\nexport const PatientsScreen = () => {\n\n    const { data } = useSelector(state => state.patients);\n\n    const [patients, setPatients] = useState(data);\n    const [registerForm, setRegisterForm] = useState(false);\n\n    useEffect(() => {\n        setPatients(data);\n    }, [data]);\n\n    const showRegisterForm = () => {\n        setRegisterForm(!registerForm);\n    }\n\n    return (\n        <div className=\"container\">\n            <p className=\"fs-3 text-center mt-3\">Pacientes</p>\n            <hr />\n            <div className=\"container\">\n                <button\n                    onClick={showRegisterForm}\n                    className={\n                        registerForm\n                            ? \"btn btn-danger\"\n                            : \"btn btn-primary\"\n                    }>\n                    {\n                        registerForm\n                            ? 'Cancelar'\n                            : 'Nuevo'\n                    }\n                </button>\n                {\n                    registerForm &&\n                    <PatientsRegister />\n                }\n            </div>\n            <PatientsList patients={patients} />\n        </div>\n    )\n}\n","import Swal from 'sweetalert2';\nimport { fetchWithoutToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\n\nexport const getPaymentsByPatient = (document = '') => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`payments/patients/${document}`);\n            const body = await resp.json();\n\n            const payments = body.payments;\n            dispatch(loadingProcedures(payments));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingProcedures = (payments) => ({\n    type: types.paymentsPatient,\n    payload: payments\n});\n\nexport const addPayment = (payment) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken('payments', payment, 'POST');\n            if (resp.status === 200) {\n                const body = await resp.json();\n                dispatch(paymentAddNew(body));\n                Swal.fire('Listo', 'Pago registrado', 'success');\n            } else {\n                resp.json()\n                .then(data => {\n                    if (data.errors) {\n                        Swal.fire('Error', data.errors.map((error) => error.msg).join(', '), 'error');\n                    } else {\n                        Swal.fire('Error', data.msg, 'error');\n                    }\n                });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst paymentAddNew = (payment) => ({\n    type: types.paymentAddNew,\n    payload: payment\n});","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nmoment.locale('es');\n\nexport const PaymentsItem = ({\n    value,\n    method,\n    patient,\n    professional,\n    procedure,\n    type,\n    date,\n    balance\n}) => {\n\n    const handleDate = () => {\n        return moment(date).utc().format('MMMM D, YYYY');\n    }\n\n    const handleMethod = (method) => {\n        switch (method) {\n            case 'EFECTIVO':\n                return 'card-text text-success';\n            case 'DEBITO':\n                return 'card-text text-primary';\n            case 'CREDITO':\n                return 'card-text text-warning';\n            default:\n                return 'card-text text-dark';\n        }\n    }\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-header\">\n                <h5 className=\"text-dark\">{procedure.name} - {procedure.type} - Valor: {procedure.value}</h5>\n            </div>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Valor: {value}</h5>\n                <p className={handleMethod(method)}>{method}</p>\n                <p className=\"card-text text-primary\">{type}</p>\n                <p className=\"card-text text-dark\">Profesional: {professional.name}</p>\n                <p className=\"card-text text-capitalize\">{handleDate()}</p>\n                <p className=\"card-text text-danger\">Saldo: {balance}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { PaymentsItem } from './PaymentsItem';\n\nexport const PaymentsList = ({ payments = [] }) => {\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            {\n                payments.map((payment, index) =>\n                    <PaymentsItem\n                        key={index}\n                        {...payment}\n                    />\n                )\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPayment } from '../../redux/actions/payments';\nimport { useForm } from '../hooks/useForm';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport Swal from 'sweetalert2';\n\nexport const PaymentsRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const { data: proceduresDB } = useSelector(state => state.procedures);\n    const { data: professionalsDB } = useSelector(state => state.professionals);\n    const { patient } = useSelector(state => state.patients);\n\n    const [procedures,] = useState(proceduresDB)\n    const [professionals,] = useState(professionalsDB);\n\n    const [values, handleInputChange] = useForm({\n        value: '',\n        method: '',\n        patient: '',\n        professional: '',\n        procedure: '',\n        type: '',\n        date: ''\n    });\n\n    const { value, method, professional, procedure, type } = values;\n\n    const handleAddPayment = (event) => {\n        event.preventDefault();\n        if (!patient) {\n            Swal.fire('Atención', 'No se ha consultado ningún paciente', 'warning');\n        } else {\n            values.patient = patient._id;\n            values.date = handleDate();\n            dispatch(addPayment(values));\n        }\n    }\n\n    const handleDate = () => {\n        return moment().utc().format('YYYY-MM-DD');\n    }\n\n    return (\n        <form onSubmit={handleAddPayment}>\n            <div className=\"row\">\n                <div className=\"col-sm-6 mb-2\">\n                    <input\n                        id=\"inputValue\"\n                        type=\"number\"\n                        className=\"form-control\"\n                        placeholder=\"Valor del abono\"\n                        autoComplete=\"off\"\n                        name=\"value\"\n                        value={value}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"btn-group\">\n                        <input\n                            id=\"initialFee\"\n                            type=\"radio\"\n                            className=\"btn-check\"\n                            autoComplete=\"off\"\n                            name=\"type\"\n                            value=\"INICIAL\"\n                            checked={type === \"INICIAL\"}\n                            onChange={handleInputChange}\n                        />\n                        <label\n                            className=\"btn btn-outline-primary\"\n                            htmlFor=\"initialFee\"\n                        >\n                            Cuota inicial\n                        </label>\n                        <input\n                            id=\"normalFee\"\n                            type=\"radio\"\n                            className=\"btn-check\"\n                            autoComplete=\"off\"\n                            name=\"type\"\n                            value=\"ABONO\"\n                            checked={type === \"ABONO\"}\n                            onChange={handleInputChange}\n                        />\n                        <label\n                            className=\"btn btn-outline-primary\"\n                            htmlFor=\"normalFee\"\n                        >\n                            Abono\n                        </label>\n                    </div>\n                </div>\n                <div className=\"col-sm-6 mt-2\">\n                    <select\n                        className=\"form-select\"\n                        name=\"procedure\"\n                        value={procedure}\n                        onChange={handleInputChange}>\n                        <option defaultValue>Tratamiento...</option>\n                        {\n                            procedures.map((procedure, index) =>\n                                <option key={index} value={procedure._id}>{procedure.name}</option>\n                            )\n                        }\n                    </select>\n                </div>\n                <div className=\"col-sm-6 mt-2\">\n                    <input\n                        id=\"efectiveMethod\"\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        autoComplete=\"off\"\n                        name=\"method\"\n                        value=\"EFECTIVO\"\n                        checked={method === \"EFECTIVO\"}\n                        onChange={handleInputChange}\n                    />\n                    <label\n                        className=\"btn btn-outline-secondary\"\n                        htmlFor=\"efectiveMethod\"\n                    >\n                        Efectivo\n                    </label>\n                    <input\n                        id=\"creditMethod\"\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        autoComplete=\"off\"\n                        name=\"method\"\n                        value=\"CREDITO\"\n                        checked={method === \"CREDITO\"}\n                        onChange={handleInputChange}\n                    />\n                    <label\n                        className=\"btn btn-outline-secondary\"\n                        htmlFor=\"creditMethod\"\n                    >\n                        Crédito\n                    </label>\n                    <input\n                        id=\"debitMethod\"\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        autoComplete=\"off\"\n                        name=\"method\"\n                        value=\"DEBITO\"\n                        checked={method === \"DEBITO\"}\n                        onChange={handleInputChange}\n                    />\n                    <label\n                        className=\"btn btn-outline-secondary\"\n                        htmlFor=\"debitMethod\"\n                    >\n                        Débito\n                    </label>\n                </div>\n                <div className=\"col-sm-6 mt-2\">\n                    <select\n                        className=\"form-select\"\n                        name=\"professional\"\n                        value={professional}\n                        onChange={handleInputChange}>\n                        <option defaultValue>Profesional...</option>\n                        {\n                            professionals.map((professional, index) =>\n                                <option key={index} value={professional._id}>{professional.name}</option>\n                            )\n                        }\n                    </select>\n                </div>\n                <div className=\"col-sm-6 mt-2\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-success\"\n                    >\n                        Registrar\n                    </button>\n                </div>\n            </div>\n            <hr />\n        </form>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { getPatient } from '../../redux/actions/patients';\nimport { getPaymentsByPatient } from '../../redux/actions/payments';\nimport { useForm } from '../hooks/useForm';\nimport { PaymentsList } from './PaymentsList';\nimport { PaymentsRegister } from './PaymentsRegister';\n\nexport const PaymentsScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [values, handleInputChange] = useForm({ document: '' });\n\n    const { document } = values;\n\n    const { data } = useSelector(state => state.payments);\n    const { patient } = useSelector(state => state.patients);\n\n    const [payments, setPayments] = useState([]);\n    const [newPayment, setNewPayment] = useState(false);\n\n    useEffect(() => {\n        setPayments(data);\n        dispatch(getPatient(document));\n    }, [dispatch, data, document]);\n\n    const onHandleSubmit = (event) => {\n        event.preventDefault();\n        if (patient.document) {\n            Swal.fire('', `Paciente ${patient.name}`, 'info');\n            dispatch(getPaymentsByPatient(document));\n        } else {\n            Swal.fire('', `No se encontraron pacientes con documento ${document}`, 'warning');\n        }\n    }\n\n    const handleNewPayment = () => {\n        setNewPayment(!newPayment);\n    }\n\n    return (\n        <div className=\"container\">\n            <h3 className=\"fs-3 text-center mt-3\">Pagos</h3>\n            <hr />\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-12\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <button\n                                onClick={handleNewPayment}\n                                className={newPayment\n                                    ? \"btn btn-danger\"\n                                    : \"btn btn-primary\"}\n                            >\n                                {newPayment\n                                    ? 'Cancelar'\n                                    : 'Nuevo'}\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 mt-2 order-first\">\n                        {newPayment &&\n                            <PaymentsRegister />\n                        }\n                    </div>\n                    </div>\n                    <div className=\"row\">                    \n                    <div className=\"col-md-12\">\n                    <form onSubmit={onHandleSubmit}>\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-sm-12 col-md-4 offset-md-2 my-2\">\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"inputDocument\"\n                                        name=\"document\"\n                                        placeholder=\"Cédula del paciente\"\n                                        onChange={handleInputChange}\n                                        value={document}\n                                        autoComplete=\"off\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-sm-12 col-md-4\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary my-2\"\n                                >\n                                    Buscar\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-12 col-md-6 order-last\">\n                    {payments &&\n                        <PaymentsList payments={payments} />\n                    }\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { addProcedure } from '../../redux/actions/procedures';\nimport { useForm } from '../hooks/useForm';\n\nexport const ProcedureRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const [values, handleInputChange, reset] = useForm({\n        name: '',\n        value: '',\n        type: '',\n        description: ''\n    });\n\n    const { name, value, type, description } = values;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(addProcedure(values));\n        reset();\n    }\n\n    return (\n        <>\n            <p className=\"fs-3 text-center mt-3\">Agregar nuevo tratamiento/extra</p>\n            <form className=\"row g-3\" onSubmit={handleSubmit}>\n                <div className=\"form-group col-md-4\">\n                    <label\n                        htmlFor=\"inputName\"\n                        className=\"form-label\">\n                        Nombre\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputName\"\n                        autoComplete=\"off\"\n                        value={name}\n                        name=\"name\"\n                        onChange={handleInputChange} />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label\n                        htmlFor=\"inputValue\"\n                        className=\"form-label\">\n                        Costo\n                    </label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        id=\"inputValue\"\n                        autoComplete=\"off\"\n                        value={value}\n                        name=\"value\"\n                        onChange={handleInputChange} />\n                </div>\n                <div className=\"form-group col-md-4 mt-5\">\n                    <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"type\"\n                        id=\"normalProcedure\"\n                        value=\"TRATAMIENTO\"\n                        checked={type === \"TRATAMIENTO\"}\n                        onChange={handleInputChange} />\n                    <label\n                        className=\"btn btn-outline-secondary\"\n                        htmlFor=\"normalProcedure\">\n                        Tratamiento\n                    </label>\n                    <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"type\"\n                        id=\"extraProcedure\"\n                        value=\"EXTRA\"\n                        checked={type === \"EXTRA\"}\n                        onChange={handleInputChange} />\n                    <label\n                        className=\"btn btn-outline-secondary\"\n                        htmlFor=\"extraProcedure\">\n                        Extra\n                    </label>\n                </div>\n                <div className=\"form-group\">\n                    <label\n                        htmlFor=\"inputDescription\">\n                        Descripción\n                    </label>\n                    <textarea\n                        id=\"inputDescription\"\n                        className=\"form-control\"\n                        rows=\"2\"\n                        autoComplete=\"off\"\n                        name=\"description\"\n                        value={description}\n                        onChange={handleInputChange}/>\n                </div>\n                <div className=\"form-group col-12\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-success m-1\">\n                        Registrar\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from 'react-responsive-modal';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../redux/actions/modal';\nimport { updateProcedure } from '../../redux/actions/procedures';\n\nconst initProcedure = {\n    name: '',\n    value: '',\n    type: '',\n    description: ''\n}\n\nexport const ProceduresModal = () => {\n\n    const dispatch = useDispatch();\n\n    const { modalDialog } = useSelector(state => state.modal);\n    const { procedure } = useSelector(state => state.procedures);\n\n    const [formValues, setFormValues] = useState(initProcedure);\n\n    const { name, value, type, description } = formValues;\n\n    useEffect(() => {\n        if (procedure) {\n            setFormValues(procedure);\n        }\n    }, [procedure]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (procedure) {\n            if(JSON.stringify(procedure) === JSON.stringify(formValues)) {\n                Swal.fire('Atención', 'No hubo cambios', 'info');\n            } else {\n                dispatch(updateProcedure(formValues));\n            }\n        }\n        closeModal();\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n    }\n\n    return (\n        <Modal\n            open={modalDialog}\n            onClose={closeModal}\n            center\n        >\n            <h2 className=\"mt-4\">Actualización de tratamiento</h2>\n            <form className=\"row g-3\" onSubmit={handleSubmit}>\n                <div className=\"form-group col-md-4\">\n                    <label\n                        htmlFor=\"inputName\"\n                        className=\"form-label\">\n                        Nombre\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputName\"\n                        autoComplete=\"off\"\n                        value={name}\n                        name=\"name\"\n                        onChange={handleInputChange} />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label\n                        htmlFor=\"inputValue\"\n                        className=\"form-label\">\n                        Costo\n                    </label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        id=\"inputValue\"\n                        autoComplete=\"off\"\n                        value={value}\n                        name=\"value\"\n                        onChange={handleInputChange} />\n                </div>\n                <div className=\"form-group col-md-4 mt-5\">\n                    <select\n                        id=\"comboType\"\n                        className=\"form-control\"\n                        onChange={handleInputChange}\n                        name=\"type\"\n                        value={type}\n                    >\n                        <option\n                            value={\"TRATAMIENTO\"}>\n                            TRATAMIENTO\n                        </option>\n                        <option\n                            value={\"EXTRA\"}>\n                            EXTRA\n                        </option>\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label\n                        htmlFor=\"inputDescription\">\n                        Descripción\n                    </label>\n                    <textarea\n                        id=\"inputDescription\"\n                        className=\"form-control\"\n                        rows=\"2\"\n                        autoComplete=\"off\"\n                        name=\"description\"\n                        value={description}\n                        onChange={handleInputChange} />\n                </div>\n                <div className=\"form-group col-12\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-success m-1\">\n                        Registrar\n                    </button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { uiOpenModal } from '../../redux/actions/modal';\nimport { getProcedure, deleteProcedure } from '../../redux/actions/procedures';\nimport { ProceduresModal } from './ProceduresModal';\n\nexport const ProcedureItem = ({ _id, name, value, type, description }) => {\n\n    const dispatch = useDispatch();\n\n    const handleUpdate = () => {\n        dispatch(uiOpenModal());\n        dispatch(getProcedure(_id));\n    }\n\n    const handleDelete = () => {\n        dispatch(getProcedure(_id));\n        dispatch(deleteProcedure(_id, name));\n    }\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-header\">{name}</div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">{value}</p>\n                <p className=\"card-text\">{type}</p>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <div className=\"card-footer text-end\">\n                <button\n                    className=\"card-link btn btn-warning\"\n                    onClick={handleUpdate}\n                >\n                    Actualizar\n                </button>\n                <button\n                    className=\"card-link btn btn-danger\"\n                    onClick={handleDelete}\n                >\n                    Eliminar\n                </button>\n            </div>\n            <ProceduresModal />\n        </div>\n    )\n}\n","import React from 'react';\nimport { ProcedureItem } from './ProcedureItem';\n\nexport const ProceduresList = ({ procedures = [] }) => {\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            <div className=\"row mt-5 justify-content-center\">\n                <div className=\"col-md-6\">\n                    {\n                        procedures.map((procedure) =>\n                            <ProcedureItem\n                                key={procedure._id}\n                                {...procedure}\n                            />)\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ProcedureRegister } from './ProcedureRegister';\nimport { ProceduresList } from './ProceduresList';\n\nexport const ProceduresScreen = () => {\n\n    const { data } = useSelector(state => state.procedures);\n    const [procedures, setProcedures] = useState(data);\n    \n    useEffect(() => {\n        setProcedures(data)\n    }, [data]);\n\n    const [registerForm, setRegisterForm] = useState(false);\n\n    const showRegisterForm = () => {\n        setRegisterForm(!registerForm);\n    }\n\n    return (\n        <div className=\"container\">\n            <p className=\"fs-3 text-center mt-3\">Tratamientos</p>\n            <hr />\n            <div className=\"container\">\n                <button\n                    onClick={showRegisterForm}\n                    className={\n                        registerForm\n                            ? \"btn btn-danger\"\n                            : \"btn btn-primary\"\n                    }>\n                    {\n                        registerForm\n                            ? 'Cancelar'\n                            : 'Nuevo'\n                    }\n                </button>\n                {\n                    registerForm &&\n                    <ProcedureRegister />\n                }\n            </div>\n            <ProceduresList procedures={procedures} />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from 'react-responsive-modal';\n\nimport { uiCloseModal } from '../../redux/actions/modal';\nimport { updateProfessional } from '../../redux/actions/professionals';\n\nconst initProfessional = {\n    document: '',\n    name: '',\n    specialty: ''\n}\n\nexport const ProfessionalsModal = () => {\n\n    const dispatch = useDispatch();\n\n    const { modalDialog } = useSelector(state => state.modal);\n    const { professional } = useSelector(state => state.professionals);\n    \n    const [formValues, setFormValues] = useState(initProfessional);\n\n    const { document, name, specialty } = formValues;\n\n    useEffect(() => {\n        if (professional) {\n            setFormValues(professional);\n        }\n    }, [professional]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (professional) {\n            dispatch(updateProfessional(formValues));\n        }\n        closeModal();\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n    }\n\n    return (\n        <Modal\n            open={modalDialog}\n            onClose={closeModal}\n            center\n        >\n            <h2 className=\"mt-4\">Actualización de profesional</h2>\n            <form className=\"row g-3\" onSubmit={handleSubmit}>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputDocument\"\n                        className=\"form-label\">\n                        No. de documento\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputDocument\"\n                        onChange={handleInputChange}\n                        name=\"document\"\n                        autoComplete=\"off\"\n                        value={document}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputName\"\n                        className=\"form-label\">\n                        Nombre\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputName\"\n                        onChange={handleInputChange}\n                        name=\"name\"\n                        autoComplete=\"off\"\n                        value={name}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputSpecialty\"\n                        className=\"form-label\">\n                        Especialidad\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputSpecialty\"\n                        onChange={handleInputChange}\n                        name=\"specialty\"\n                        autoComplete=\"off\"\n                        value={specialty}\n                    />\n                </div>\n                <div className=\"col-12\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-success m-1\">\n                        Registrar\n                    </button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ProfessionalsModal } from './ProfessionalsModal';\nimport { deleteProfessional, getProfessional } from '../../redux/actions/professionals';\nimport { uiOpenModal } from '../../redux/actions/modal';\n\nexport const ProfessionalsItem = ({ _id, document, name, specialty }) => {\n\n    const dispatch = useDispatch();\n\n    const handleUpdate = () => {\n        dispatch(uiOpenModal());\n        dispatch(getProfessional(document));\n    }\n\n    const handleDelete = () => {\n        dispatch(getProfessional(document));\n        dispatch(deleteProfessional(_id, name));\n    }\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-header\">{name}</div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">{specialty}</p>\n            </div>\n            <div className=\"card-footer text-end\">\n                <button\n                    className=\"card-link btn btn-warning\"\n                    onClick={handleUpdate}\n                >\n                    Actualizar\n                </button>\n                <button\n                    className=\"card-link btn btn-danger\"\n                    onClick={handleDelete}\n                >\n                    Eliminar\n                </button>\n            </div>\n            <ProfessionalsModal />\n        </div>\n    )\n}\n","import React from 'react'\nimport { ProfessionalsItem } from './ProfessionalsItem'\n\nexport const ProfessionalsList = ({ professionals = [] }) => {\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            <div className=\"row mt-5 justify-content-center\">\n                <div className=\"col-md-6\">\n                    {\n                        professionals.map((professional) =>\n                            <ProfessionalsItem\n                                key={professional._id}\n                                {...professional}\n                            />)\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addProfessional } from '../../redux/actions/professionals';\nimport { useForm } from '../hooks/useForm';\n\nexport const ProfessionalsRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const [values, handleInputChange, reset] = useForm({\n        document: '',\n        name: '',\n        specialty: ''\n    });\n\n    const { document, name, specialty } = values;\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        dispatch(addProfessional(values));\n        reset();\n    }\n\n    return (\n        <div>\n            <p className=\"fs-3 text-center mt-3\">Agregar nuevo profesional</p>\n            <form className=\"row g-3\" onSubmit={handleSubmit}>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputDocument\"\n                        className=\"form-label\">\n                        No. de documento\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputDocument\"\n                        onChange={handleInputChange}\n                        name=\"document\"\n                        autoComplete=\"off\"\n                        value={document}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputName\"\n                        className=\"form-label\">\n                        Nombre\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputName\"\n                        onChange={handleInputChange}\n                        name=\"name\"\n                        autoComplete=\"off\"\n                        value={name}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputSpecialty\"\n                        className=\"form-label\">\n                        Especialidad\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputSpecialty\"\n                        onChange={handleInputChange}\n                        name=\"specialty\"\n                        autoComplete=\"off\"\n                        value={specialty}\n                    />\n                </div>\n                <div className=\"col-12\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-success m-1\">\n                        Registrar\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ProfessionalsList } from './ProfessionalsList';\nimport { ProfessionalsRegister } from './ProfessionalsRegister';\n\nexport const ProfessionalsScreen = () => {\n\n    const { data } = useSelector(state => state.professionals);\n    const [professionals, setProfessionals] = useState(data);\n    const [registerForm, setRegisterForm] = useState(false);\n\n    useEffect(() => {\n        setProfessionals(data);\n    }, [data]);\n\n    const showRegisterForm = () => {\n        setRegisterForm(!registerForm);\n    }\n\n    return (\n        <div className=\"container\">\n            <p className=\"fs-3 text-center mt-3\">Profesionales</p>\n            <hr />\n            <div className=\"container\">\n                <button\n                    onClick={showRegisterForm}\n                    className={\n                        registerForm\n                            ? \"btn btn-danger\"\n                            : \"btn btn-primary\"\n                    }>\n                    {\n                        registerForm\n                            ? 'Ocultar'\n                            : 'Nuevo'\n                    }\n                </button>\n\n                {\n                    registerForm &&\n                    <ProfessionalsRegister />\n                }\n\n            </div>\n            <ProfessionalsList professionals={professionals} />\n        </div>\n    )\n}\n","import { fetchWithoutToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\n\nexport const reportsByPatient = (range = '', id = '') => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`search/patients/${range}/${id}`);\n            const body = await resp.json();\n\n            const reports = body.payments;\n            const total = body.total;\n            dispatch(loadingPatients(reports, total));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingPatients = (reports, total) => ({\n    type: types.reportsPatient,\n    payload: { reports, total }\n});\n\nexport const reportsByProcedure = (range = '', id = '') => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`search/procedures/${range}/${id}`);\n            const body = await resp.json();\n\n            const reports = body.payments;\n            const total = body.total;\n            dispatch(loadingProcedures(reports, total));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingProcedures = (reports, total) => ({\n    type: types.reportsProcedure,\n    payload: { reports, total }\n});\n\nexport const reportsByProfessional = (range = '', id = '') => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithoutToken(`search/professionals/${range}/${id}`);\n            const body = await resp.json();\n\n            const reports = body.payments;\n            const total = body.total;\n            dispatch(loadingProfessionals(reports, total));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingProfessionals = (reports, total) => ({\n    type: types.reportsProfessional,\n    payload: { reports, total }\n});","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nmoment.locale('es');\n\nexport const ReportsPatientList = ({ payments = [], total }) => {\n\n    const handleDate = (date) => {\n        return moment(date).format('MMMM D, YYYY');\n    }\n\n    return (\n        <div className=\"col-md-12 table-responsive-md mt-5\">\n            <ReactHTMLTableToExcel\n                id=\"excelButton\"\n                className=\"btn btn-success\"\n                table=\"tablePatients\"\n                filename=\"ReportePorPaciente\"\n                sheet=\"Hoja1\"\n                buttonText=\"Exportar a Excel\"\n            />\n            <table id=\"tablePatients\" className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Fecha</th>\n                        <th>Valor</th>\n                        <th>Método de pago</th>\n                        <th>Tipo de pago</th>\n                        <th>Tratamiento</th>\n                        <th>Profesional</th>\n                        <th>Saldo</th>\n                        <th>Total</th>\n                        <th>Registros: {total}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        payments.map(({ value, method, type, date, professional, procedure, balance }, index) =>\n                            <tr key={index}>\n                                <td className=\"text-capitalize\">{handleDate(date)}</td>\n                                <td>{value}</td>\n                                <td>{method}</td>\n                                <td>{type}</td>\n                                <td>{procedure.name}</td>\n                                <td>{professional.name}</td>\n                                <td>{balance}</td>\n                                <td>{procedure.value}</td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nmoment.locale('es');\n\nexport const ReportsProcedureList = ({ payments = [], total }) => {\n\n    const handleDate = (date) => {\n        return moment(date).format('MMMM D, YYYY');\n    }\n\n    return (\n        <div className=\"col-md-12 table-responsive-md mt-5\">\n            <ReactHTMLTableToExcel\n                id=\"excelButton\"\n                className=\"btn btn-success\"\n                table=\"tableProcedures\"\n                filename=\"ReportePorProcedimiento\"\n                sheet=\"Hoja1\"\n                buttonText=\"Exportar a Excel\"\n            />\n            <table id=\"tableProcedures\" className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Fecha</th>\n                        <th>Valor</th>\n                        <th>Método de pago</th>\n                        <th>Tipo de pago</th>\n                        <th>Profesional</th>\n                        <th>Balance</th>\n                        <th>Total: {total}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        payments.map(({ value, method, type, date, professional, balance }, index) =>\n                            <tr key={index}>\n                                <td className=\"text-capitalize\">{handleDate(date)}</td>\n                                <td>{value}</td>\n                                <td>{method}</td>\n                                <td>{type}</td>\n                                <td>{professional.name}</td>\n                                <td>{balance}</td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nmoment.locale('es');\n\nexport const ReportsProfessionalList = ({ payments = [], total }) => {\n\n    const handleDate = (date) => {\n        return moment(date).format('MMMM D, YYYY');\n    }\n\n    return (\n        <div className=\"col-md-12 table-responsive-md mt-5\">\n            <ReactHTMLTableToExcel\n                id=\"excelButton\"\n                className=\"btn btn-success\"\n                table=\"tableProfessionals\"\n                filename=\"ReportePorProfesional\"\n                sheet=\"Hoja1\"\n                buttonText=\"Exportar a Excel\"\n            />\n            <table id=\"tableProfessionals\" className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Fecha</th>\n                        <th>Valor</th>\n                        <th>Método de pago</th>\n                        <th>Tipo de pago</th>\n                        <th>Tratamiento</th>\n                        <th>Saldo</th>\n                        <th>Total</th>\n                        <th>Registros: {total}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        payments.map(({ value, method, type, date, procedure, balance }, index) =>\n                            <tr key={index}>\n                                <td className=\"text-capitalize\">{handleDate(date)}</td>\n                                <td>{value}</td>\n                                <td>{method}</td>\n                                <td>{type}</td>\n                                <td>{procedure.name}</td>\n                                <td>{balance}</td>\n                                <td>{procedure.value}</td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useForm } from '../hooks/useForm';\nimport { getPatient } from '../../redux/actions/patients';\nimport { reportsByPatient, reportsByProcedure, reportsByProfessional } from '../../redux/actions/reports';\nimport { ReportsPatientList } from './ReportsPatientList';\nimport { ReportsProcedureList } from './ReportsProcedureList';\nimport { ReportsProfessionalList } from './ReportsProfessionalList';\n\nexport const ReportsScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [values, handleInputChange] = useForm({\n        collection: '',\n        range: '',\n        document: '',\n        id: ''\n    });\n\n    const { collection, range, document, id } = values;\n\n    const { data: proceduresDB } = useSelector(state => state.procedures);\n    const { data: professionalsDB } = useSelector(state => state.professionals);\n    const { data: reportsDB, total: totalDB } = useSelector(state => state.reports);\n    const { patient } = useSelector(state => state.patients);\n\n    const [procedures, setProcedures] = useState(proceduresDB);\n    const [professionals, setProfessionals] = useState(professionalsDB);\n    const [proceduresReports, setProceduresReports] = useState(false);\n    const [professionalsReports, setProfessionalsReports] = useState(false);\n    const [payments, setPayments] = useState(reportsDB);\n    const [total, setTotal] = useState(totalDB);\n\n    useEffect(() => {\n        setPayments(reportsDB);\n        setProcedures(proceduresDB);\n        setProfessionals(professionalsDB);\n        setTotal(totalDB);\n        dispatch(getPatient(document));\n    }, [reportsDB, proceduresDB, professionalsDB, totalDB, dispatch, document]);\n\n    const handleQuery = (event) => {\n        event.preventDefault();\n\n        switch (collection) {\n            case 'procedures':\n                dispatch(reportsByProcedure(range, id));\n                setProfessionalsReports(false);\n                setProceduresReports(true);\n                break;\n            case 'professionals':\n                dispatch(reportsByProfessional(range, id));\n                setProceduresReports(false);\n                setProfessionalsReports(true);\n                break;\n            default:\n                dispatch(reportsByPatient(range, patient._id));\n                break;\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <h3 className=\"text-center mt-3\">Reportes</h3>\n            <hr />\n            <form onSubmit={handleQuery}>\n                <div className=\"row\">\n                    <div className=\"col-md-3 mb-1\">\n                        <select\n                            id=\"comboRange\"\n                            className=\"form-select\"\n                            name=\"range\"\n                            value={range}\n                            onChange={handleInputChange}\n                        >\n                            <option defaultValue>Lapso...</option>\n                            <option value=\"year\">Año</option>\n                            <option value=\"semester\">Semestre</option>\n                            <option value=\"month\">Mes</option>\n                            <option value=\"week\">Semana</option>\n                        </select>\n                    </div>\n                    <div className=\"col-md-3 mb-1\">\n                        <select\n                            id=\"comboCollection\"\n                            className=\"form-select\"\n                            name=\"collection\"\n                            value={collection}\n                            onChange={handleInputChange}\n                        >\n                            <option defaultValue>Criterio...</option>\n                            <option value=\"patients\">Paciente</option>\n                            <option value=\"procedures\">Procedimiento</option>\n                            <option value=\"professionals\">Profesional</option>\n                        </select>\n                    </div>\n\n                    {collection === \"patients\" &&\n                        <div className=\"col-md-3 mb-1\">\n                            <input\n                                id=\"patientDocument\"\n                                className=\"form-control\"\n                                autoComplete=\"off\"\n                                name=\"document\"\n                                placeholder=\"Documento del paciente...\"\n                                value={document}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                    }\n\n                    {collection === \"procedures\" &&\n                        <div className=\"col-md-3 mb-1\">\n                            <select\n                                id=\"comboProcedure\"\n                                className=\"form-select\"\n                                name=\"id\"\n                                value={id}\n                                onChange={handleInputChange}\n                            >\n                                <option defaultValue>Seleccione...</option>\n                                {procedures &&\n                                    procedures.map((procedure, index) =>\n                                        <option key={index} value={procedure._id}>{procedure.name}</option>\n                                    )}\n                            </select>\n                        </div>\n                    }\n\n                    {collection === \"professionals\" &&\n                        <div className=\"col-md-3 mb-1\">\n                            <select\n                                id=\"comboProfessional\"\n                                className=\"form-select\"\n                                name=\"id\"\n                                value={id}\n                                onChange={handleInputChange}\n                            >\n                                <option defaultValue>Seleccione...</option>\n                                {\n                                    professionals.map((professional, index) =>\n                                        <option key={index} value={professional._id}>{professional.name}</option>\n                                    )\n                                }\n                            </select>\n                        </div>\n                    }\n\n                    {id &&\n                        <div className=\"col-md-2 mb-1\">\n                            <button className=\"btn btn-primary\">Consultar</button>\n                        </div>\n                    }\n                </div>\n            </form>\n            <div className=\"row\">\n                {collection === 'procedures' && proceduresReports &&\n                    <ReportsProcedureList payments={payments} total={total} />\n                }\n                {collection === 'professionals' && professionalsReports &&\n                    <ReportsProfessionalList payments={payments} total={total} />\n                }\n                {collection === 'patients' && document &&\n                    <ReportsPatientList payments={payments} total={total} />\n                }\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from 'react-responsive-modal';\nimport { FaRegWindowClose } from 'react-icons/fa';\nimport generator from 'generate-password';\nimport Swal from 'sweetalert2';\n\nimport { updateUser } from '../../redux/actions/users';\nimport { uiCloseModal } from '../../redux/actions/modal';\n\nconst initUser = {\n    name: '',\n    email: '',\n    username: '',\n    password: '',\n    role: ''\n}\n\nexport const UsersModal = () => {\n\n    const dispatch = useDispatch();\n\n    const { modalDialog } = useSelector(state => state.modal);\n    const { user } = useSelector(state => state.users);\n\n    const [formValues, setFormValues] = useState(initUser);\n    const [display, setDisplay] = useState(false);\n    const [passwordDisplay, setPasswordDisplay] = useState('');\n\n    const { name, username, role } = formValues;\n\n    useEffect(() => {\n        if (user) {\n            setFormValues(user);\n        }\n    }, [user]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n    }\n\n    const handleDisplay = () => {\n        setDisplay(false);\n    }\n\n    const handleResetPassword = () => {\n        const pwd = generator.generate({\n            length: 10,\n            numbers: true,\n            uppercase: false\n        });\n\n        setDisplay(true);\n        setPasswordDisplay(pwd);\n        setFormValues({\n            ...formValues,\n            password: pwd\n        });\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(formValues);\n        if (user) {\n            if (JSON.stringify(user) !== JSON.stringify(formValues)) {\n                setFormValues({\n                    ...formValues,\n                    password: passwordDisplay\n                });\n                dispatch(updateUser(formValues));\n                setDisplay(false);\n            } else {\n                Swal.fire('Atención', 'Datos no fueron modificados', 'info');\n            }\n        }\n        closeModal();\n    }\n\n    return (\n        <Modal\n            open={modalDialog}\n            onClose={closeModal}\n            center\n        >\n            <h2 className=\"mt-4\">Actualización de usuario</h2>\n            <form className=\"row g-3\" onSubmit={handleSubmit}>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputName\"\n                        className=\"form-label\">\n                        Nombre\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputName\"\n                        onChange={handleInputChange}\n                        name=\"name\"\n                        autoComplete=\"off\"\n                        value={name}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputUsername\"\n                        className=\"form-label\">\n                        Usuario\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputDocument\"\n                        onChange={handleInputChange}\n                        name=\"username\"\n                        autoComplete=\"off\"\n                        value={username}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label\n                        htmlFor=\"inputRole\"\n                        className=\"form-label\">\n                        Rol\n                    </label>\n                    <select\n                        id=\"inputRole\"\n                        className=\"form-select\"\n                        name=\"role\"\n                        value={role}\n                        onChange={handleInputChange}>\n                        <option value=\"ADMIN\">\n                            Administrador\n                        </option>\n                        <option value=\"AGENT\">\n                            Agente\n                        </option>\n                    </select>\n                </div>\n                <div className=\"col-md-4\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleResetPassword}\n                    >\n                        Reestablecer contraseña\n                    </button>\n                </div>\n                {display &&\n                    <div className=\"col-md-5\">\n                        <div className=\"border border-primary rounded text-center text-light\">\n                            <button\n                                onClick={handleDisplay}\n                                className=\"btn text-primary float-end\">\n                                <FaRegWindowClose />\n                            </button>\n                            <div className=\"clearfix\" />\n                            {user &&\n                                <p className=\"text-start text-primary\">\n                                    Contraseña: {passwordDisplay}\n                                </p>\n                            }\n                        </div>\n                    </div>\n                }\n                <div className=\"col-12\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-success m-1\">\n                        Registrar\n                    </button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { FaUserTie, FaUser } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\n\nimport { getUser, deleteUser } from '../../redux/actions/users';\nimport { uiOpenModal } from '../../redux/actions/modal';\nimport { UsersModal } from './UsersModal';\n\nexport const UsersItem = ({ _id, name, email, username, role }) => {\n\n    const dispatch = useDispatch();\n\n    const handleUpdate = () => {\n        dispatch(uiOpenModal());\n        dispatch(getUser(email));\n    }\n\n    const handleDelete = () => {\n        dispatch(getUser(email));\n        dispatch(deleteUser(_id, name));\n    }\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-header\">{name}</div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">{username}</p>\n                {role === \"ADMIN\"\n                    ?\n                    <p className=\"card-text fs-5 text-info\">\n                        <FaUserTie className=\"card-text fs-3 text-dark\" />\n                        &nbsp;Administrador\n                    </p>\n                    :\n                    <p className=\"card-text fs-5 text-secondary\">\n                        <FaUser className=\"card-text fs-3 text-dark\" />\n                        &nbsp;Agente\n                    </p>\n                }\n            </div>\n            <div className=\"card-footer text-end\">\n                <button\n                    className=\"card-link btn btn-warning\"\n                    onClick={handleUpdate}\n                >\n                    Actualizar\n                </button>\n                <button\n                    className=\"card-link btn btn-danger\"\n                    onClick={handleDelete}\n                >\n                    Eliminar\n                </button>\n            </div>\n            <UsersModal />\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { UsersItem } from './UsersItem';\n\nexport const UsersList = ({ users = [] }) => {\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            <div className=\"row mt-5 justify-content-center\">\n                <div className=\"col-md-12\">\n                    {\n                        users.map((user, index) =>\n                            <UsersItem\n                                key={index}\n                                {...user}\n                            />\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaRegWindowClose } from 'react-icons/fa';\nimport generator from 'generate-password';\n\nimport { useForm } from '../hooks/useForm';\nimport { addUser } from '../../redux/actions/users';\n\nexport const UsersRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const [display, setDisplay] = useState(false);\n    const [password, setPassword] = useState('');\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: ''\n    });\n\n    const { user: userDB } = useSelector(state => state.users);\n\n    const [values, handleInputChange, reset] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        role: ''\n    });\n\n    const { name, email, role } = values;\n\n    useEffect(() => {\n        setUser(userDB);\n    }, [dispatch, email, userDB]);\n\n    const handleDisplay = () => {\n        setDisplay(false);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const pwd = generator.generate({\n            length: 10,\n            numbers: true,\n            uppercase: false\n        });\n\n        setPassword(pwd);\n        values.password = pwd;\n\n        dispatch(addUser(values));\n        setDisplay(true);\n\n        reset();\n    }\n\n    return (\n        <div className=\"row\">\n            <p className=\"fs-3 text-center mt-3\">Agregar nuevo usuario</p>\n            <form onSubmit={handleSubmit}>\n                <div className=\"row\">\n                    <div className=\"col-md-3 mt-1\">\n                        <input\n                            id=\"inputName\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Nombre de usuario\"\n                            autoComplete=\"off\"\n                            name=\"name\"\n                            value={name}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                    <div className=\"col-md-3 mt-1\">\n                        <input\n                            id=\"inputEmail\"\n                            type=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email de usuario\"\n                            autoComplete=\"off\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                    <div className=\"col-md-3 mt-1\">\n                        <select\n                            id=\"inputRole\"\n                            className=\"form-select\"\n                            name=\"role\"\n                            value={role}\n                            onChange={handleInputChange}>\n                            <option defaultChecked>\n                                Rol de usuario...\n                            </option>\n                            <option value=\"ADMIN\">\n                                Administrador\n                            </option>\n                            <option value=\"AGENT\">\n                                Agente\n                            </option>\n                        </select>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary m-1\"\n                        >\n                            Generar usuario\n                    </button>\n                    </div>\n                </div>\n            </form>\n            {display &&\n                <div className=\"row\">\n                    <div\n                        className=\"col-md-3 offset-md-4 mt-2\n                    border border-success rounded text-center text-success bg-success\">\n                        <button\n                            onClick={handleDisplay}\n                            className=\"btn text-success float-end\">\n                            <FaRegWindowClose />\n                        </button>\n                        <div className=\"clearfix\" />\n                        {user &&\n                            <p className=\"text-start\">\n                                Nombre de usuario: {user.username}\n                                <br />\n                                Contraseña: {password}\n                            </p>\n                        }\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { UsersList } from './UsersList';\nimport { UsersRegister } from './UsersRegister';\n\nexport const UsersScreen = () => {\n\n    const [registerForm, setRegisterForm] = useState(false);\n\n    const { data } = useSelector(state => state.users);\n\n    const [users, setUsers] = useState(data);\n\n    useEffect(() => {\n        setUsers(data);\n    }, [data]);\n\n    const showRegisterForm = () => {\n        setRegisterForm(!registerForm);\n    }\n\n    return (\n        <div className=\"container\">\n            <h3 className=\"text-center mt-3\">Usuarios</h3>\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <button\n                        onClick={showRegisterForm}\n                        className={\n                            registerForm\n                                ? \"btn btn-danger\"\n                                : \"btn btn-primary\"\n                        }\n                    >\n                        {\n                            registerForm\n                                ? 'Ocultar'\n                                : 'Nuevo'\n                        }\n                    </button>\n                    {\n                        registerForm &&\n                        <UsersRegister />\n                    }\n                </div>\n                <div className=\"col-md-6 offset-md-3\">\n                    <UsersList users={users} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { PatientsScreen } from '../components/patients/PatientsScreen';\nimport { PaymentsScreen } from '../components/payments/PaymentsScreen';\nimport { ProceduresScreen } from '../components/procedures/ProceduresScreen';\nimport { ProfessionalsScreen } from '../components/professionals/ProfessionalsScreen';\nimport { ReportsScreen } from '../components/search/ReportsScreen';\nimport { UsersScreen } from '../components/users/UsersScreen';\n\nexport const MainRouter = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route\n                    exact path=\"/\"\n                    component={PaymentsScreen} />\n                <Route\n                    exact path=\"/patients\"\n                    component={PatientsScreen} />\n                <Route\n                    exact path=\"/professionals\"\n                    component={ProfessionalsScreen} />\n                <Route\n                    exact path=\"/procedures\"\n                    component={ProceduresScreen} />\n                <Route\n                    exact path=\"/reports\"\n                    component={ReportsScreen} />\n                <Route\n                    exact path=\"/users\"\n                    component={UsersScreen} />\n                <Route path=\"*\" component={PaymentsScreen} />\n            </Switch>\n        </Router>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/VitalPlus400x160.786f4bdf.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n    FaCartPlus,\n    FaRegUser,\n    FaUserMd,\n    FaNotesMedical,\n    FaClipboardList,\n    FaTh,\n    FaUsers,\n    FaUserAlt,\n    FaSignOutAlt\n} from 'react-icons/fa';\n\nimport logo from '../../assets/VitalPlus400x160.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../redux/actions/auth';\n\nexport const MainSidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-lg bg-clear-blue\">\n            <div className=\"container\">\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-target=\"#mainNavbar\"\n                    data-bs-toggle=\"collapse\"\n                    aria-expanded=\"false\">\n                    <span className=\"navbar-toggler-icon text-light\"><FaTh /></span>\n                </button>\n                <img src={logo} alt=\"logo\" className=\"logo navbar-brand img-thumbnail\" />\n                <div id=\"mainNavbar\" className=\"collapse navbar-collapse mt-2\">\n                    <div className=\"row\">\n                        <div className=\"col-md-10\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item\">\n                                    <NavLink\n                                        exact to=\"/\"\n                                        activeClassName=\"active animate__animated animate__pulse animate__faster 200ms\"\n                                        className=\"nav-link fs-5 px-2 text-light\">\n                                        <FaCartPlus /> Pagos\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink\n                                        to=\"/patients\"\n                                        activeClassName=\"active animate__animated animate__pulse animate__faster 200ms\"\n                                        className=\"nav-link fs-5 px-2 text-light\">\n                                        <FaRegUser /> Pacientes\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink\n                                        to=\"/professionals\"\n                                        activeClassName=\"active animate__animated animate__pulse animate__faster 200ms\"\n                                        className=\"nav-link fs-5 px-2 text-light\">\n                                        <FaUserMd /> Profesionales\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink\n                                        to=\"/procedures\"\n                                        activeClassName=\"active animate__animated animate__pulse animate__faster 200ms\"\n                                        className=\"nav-link fs-5 px-2 text-light\">\n                                        <FaNotesMedical /> Tratamientos\n                                    </NavLink>\n                                </li>\n                                {user.role === \"ADMIN\" &&\n                                    <li className=\"nav-item\">\n                                        <NavLink\n                                            to=\"/reports\"\n                                            activeClassName=\"active animate__animated animate__pulse animate__faster 200ms\"\n                                            className=\"nav-link fs-5 px-2 text-light\">\n                                            <FaClipboardList /> Reportes\n                                        </NavLink>\n                                    </li>\n                                }\n                                {user.role === \"ADMIN\" &&\n                                    <li className=\"nav-item\">\n                                        <NavLink\n                                            to=\"/users\"\n                                            activeClassName=\"active animate__animated animate__pulse animate__faster 200ms\"\n                                            className=\"nav-link fs-5 px-2 text-light\">\n                                            <FaUsers /> Usuarios\n                                        </NavLink>\n                                    </li>\n                                }\n                            </ul>\n                        </div>\n                        <div className=\"col-md-2 text-end\">\n                            <button\n                                onClick={handleLogout}\n                                className=\"btn btn-outline-warning\">\n                                <strong className=\"fs-6\"><FaSignOutAlt /> Salir</strong>\n                            </button>\n                            <br />\n                            <span className=\"fs-6 text-light\">\n                                <FaUserAlt /> {user.name}\n                                <br />\n                                {user.role === \"ADMIN\"\n                                    ? \" ADMIN\"\n                                    : \" Agente\"\n                                }\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getPatients } from '../../redux/actions/patients';\nimport { getProcedures } from '../../redux/actions/procedures';\nimport { getProfessionals } from '../../redux/actions/professionals';\nimport { getUsers } from '../../redux/actions/users';\n\nimport { MainRouter } from '../../routes/MainRouter';\nimport { MainSidebar } from './MainSidebar';\n\nexport const MainScreen = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPatients());\n        dispatch(getProcedures());\n        dispatch(getProfessionals());\n        dispatch(getUsers());\n    }, [dispatch]);\n\n    return (\n        <main className=\"container bg-orange min-vh-100 min-vw-100\">\n            <div className=\"row\">\n                <MainSidebar />\n                <div className=\"col-md-12\">\n                    <MainRouter />\n                </div>\n            </div>\n        </main>\n    );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                ? (<Component {...props} />)\n                : (<Redirect to='/login' />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isAuthenticated)\n                    ? (<Component {...props} />)\n                    : (<Redirect to='/' />)\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { startChecking } from '../redux/actions/auth';\n\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { MainScreen } from '../components/main/MainScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, user } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return (<h5>Cargando...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!user}\n                    />\n                    <PrivateRoute\n                        path=\"/\"\n                        component={MainScreen}\n                        isAuthenticated={!!user}\n                    />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\n\nimport { store } from '../src/redux/store/store';\nimport { AppRouter } from './routes/AppRouter';\n\nimport { Provider } from 'react-redux';\n\nexport const VitalPlusApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { VitalPlusApp } from './VitalPlusApp';\n\nimport './styles/styles.css';\n\nReactDOM.render(\n    <VitalPlusApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}